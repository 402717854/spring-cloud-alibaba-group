server:
  port: 8888
spring:
  application:
    name: gateway-application
  cloud:
    # Spring Cloud Gateway 配置项，对应 GatewayProperties 类
    gateway:
      # 路由配置项，对应 RouteDefinition 数组
      routes:
        - id: yudaoyuanma # 路由的编号
          uri: http://www.iocoder.cn # 路由到的目标地址
          predicates: # 断言，作为路由的匹配条件，对应 RouteDefinition 数组
            - Path=/blog
          filters:
            - StripPrefix=1
    sentinel:
      enabled: true
      eager: true # 是否饥饿加载。默认为 false 关闭
      transport:
        dashboard: 192.168.66.9:9090
        port: 8719
      #配置数据源，从数据源中获取路由规则。否则，每次路由服务重启路由规则会从控制台删除
      #数据源规则配置详情https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81
      #controlBehavior:0快速失败2匀速排队
      datasource:
        ds1.file:
          file: "classpath: sentinel-gw-flow.json"
          ruleType: gw-flow
        ds2.file:
          file: "classpath: sentinel-gw-api-group.json"
          ruleType: gw-api-group
      filter:
        url-patterns: /** #拦截请求的地址。默认为 /*
      # Sentinel 对 Spring Cloud Gateway 的专属配置项，对应 SentinelGatewayProperties 类
      scg:
        order: -2147483648 # 过滤器顺序，默认为 -2147483648 最高优先级
        fallback:
          mode: # fallback 模式，目前有三种：response、redirect、空
          # 专属 response 模式
          response-status: 429 # 响应状态码，默认为 429
          response-body: 你被 block 了... # 响应内容，默认为空
          content-type: application/json # 内容类型，默认为 application/json
          # 专属 redirect 模式
          redirect: http://www.baidu.com